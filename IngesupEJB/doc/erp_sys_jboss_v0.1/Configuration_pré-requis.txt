Se connecter en root

create database PRODIC2K;
create database AUTHIC2K;

grant all on PRODIC2K.* to cdsappl@'localhost';
grant all on AUTHIC2K.* to cdsjboss@'localhost';

SET PASSWORD FOR cdsappl@'localhost' = PASSWORD('iConsult2000');
SET PASSWORD FOR cdsjboss@'localhost' = PASSWORD('iConsult2000');

use AUTHIC2K;
CREATE TABLE Principals (
        NO int primary key auto_increment,
        PrincipalID varchar(30),
        Password varchar(30)
) ENGINE InnoDB;

CREATE TABLE Roles (
        NA int primary key auto_increment,
        PrincipalID VARCHAR(30) ,
        Role VARCHAR(30),
        RoleGroup VARCHAR(30)
) ENGINE InnoDB;

INSERT INTO Principals VALUES ('', 'steeve', '9lAuA7l3IQj3CZJYkYidiw==');
INSERT INTO Principals VALUES ('', 'manuel', 'mztYihJJkbNWK+MG5z7ZmA==');
INSERT INTO Principals VALUES ('', 'yohann', 'EMC4Ib4kShMQI3skbQDbxQ==');
INSERT INTO Principals VALUES ('', 'julien', 'IwWxwnzmzsKWb2A1KaTAIQ==');
INSERT INTO Principals VALUES ('', 'lori', 'uIS39WkGLU9ylXcgwidfDg==');
INSERT INTO Principals VALUES ('', 'svepde', 'JYHRGBFTskNxRHcubg6WzA==');

INSERT INTO Roles VALUES ('', 'steeve', 'etudiant', 'Roles');
INSERT INTO Roles VALUES ('', 'manuel', 'shopper', 'Roles');
INSERT INTO Roles VALUES ('', 'yohann', 'etudiant', 'Roles');
INSERT INTO Roles VALUES ('', 'julien', 'etudiant', 'Roles');
INSERT INTO Roles VALUES ('', 'lori', 'etudiant', 'Roles');
INSERT INTO Roles VALUES ('', 'srvpde', 'gestion', 'Roles');

***************************UPDATE******************************************
// Table Principals dans AUTHIC2K

update Principals set PrincipalID='s.dacalor@ingesup.com' where PrincipalID='steeve';
update Principals set PrincipalID='m.phejar@ingesup.com' where PrincipalID='manuel';
update Principals set PrincipalID='y.bray@ingesup.com' where PrincipalID='yohann';
update Principals set PrincipalID='j.pitou@ingesup.com' where PrincipalID='julien';
update Principals set PrincipalID='l.ferrand@ingesup.com' where PrincipalID='lori';
update Principals set PrincipalID='svepde@ingesup.com' where PrincipalID='svepde';

// Table Roles dans AUTHIC2K
update Roles set PrincipalID='s.dacalor@ingesup.com' where PrincipalID='steeve';
update Roles set PrincipalID='m.phejar@ingesup.com' where PrincipalID='manuel';
update Roles set PrincipalID='y.bray@ingesup.com' where PrincipalID='yohann';
update Roles set PrincipalID='j.pitou@ingesup.com' where PrincipalID='julien';
update Roles set PrincipalID='l.ferrand@ingesup.com' where PrincipalID='lori';
update Roles set PrincipalID='svepde@ingesup.com' where PrincipalID='svepde';

// Table Etudiant dans PRODIC2K
update Etudiant set emailPers='s.dacalor@ingesup.com' where prenomPers='Steeve';
update Etudiant set emailPers='m.phejar@ingesup.com' where prenomPers='Manuel';
update Etudiant set emailPers='y.bray@ingesup.com' where prenomPers='Yohann';
update Etudiant set emailPers='j.pitou@ingesup.com' where prenomPers='Julien';
update Etudiant set emailPers='l.ferrand@ingesup.com' where prenomPers='Lori';

// Table Contrat

-- Definition of table `PRODIC2K`.`Contrat`
--

DROP TABLE IF EXISTS `PRODIC2K`.`Contrat`;
CREATE TABLE  `PRODIC2K`.`Contrat` (
  `idContrat` int(11) NOT NULL AUTO_INCREMENT,
  `dateDebutCont` datetime DEFAULT NULL,
  `dateFinCont` datetime DEFAULT NULL,
  `dureeCont` int(11) NOT NULL,
  `idPersonne` int(11) NOT NULL,
  `libelleContrat` varchar(15) COLLATE utf8_unicode_ci DEFAULT NULL,
  `siren` varchar(15) COLLATE utf8_unicode_ci DEFAULT NULL,
  `idTypContr` int(11) DEFAULT NULL,
  PRIMARY KEY (`idContrat`),
  KEY `FK9BEFFB931562232A` (`siren`),
  KEY `FK9BEFFB938EEE00CD` (`idPersonne`),
  KEY `FK9BEFFB9359B4433F` (`idTypContr`),
  CONSTRAINT `FK9BEFFB9359B4433F` FOREIGN KEY (`idTypContr`) REFERENCES `TypeContrat` (`idTypContr`),
  CONSTRAINT `FK9BEFFB931562232A` FOREIGN KEY (`siren`) REFERENCES `Entreprise` (`siren`),
  CONSTRAINT `FK9BEFFB938EEE00CD` FOREIGN KEY (`idPersonne`) REFERENCES `Etudiant` (`idPersonne`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `PRODIC2K`.`Contrat`
--

/*!40000 ALTER TABLE `Contrat` DISABLE KEYS */;
LOCK TABLES `Contrat` WRITE;
INSERT INTO `PRODIC2K`.`Contrat` VALUES  (1,'2012-05-06 12:40:01','2013-05-24 12:40:07',12,'Apprentit SI','PI9974YZEEA',1,2),
 (2,'2012-05-31 12:43:02','2013-05-06 12:42:56',12,'Apprentit dével','J4U5LK2POB',1,3),
 (3,'2012-05-31 12:43:02','2013-05-06 12:42:56',12,'Stagiaire admin','PI9974EEA',1,4),
 (4,'2012-05-06 12:45:02','2013-05-06 12:42:56',12,'Apprentit ingén','639URST',2,5),
 (5,'2012-05-06 12:45:02','2013-05-06 12:45:02',12,'Stagiaire Assis','PI9974YZEEA',2,6);
UNLOCK TABLES;
/*!40000 ALTER TABLE `Contrat` ENABLE KEYS */;



********************authic2k-ds.xml to JBOSS server**********************
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE datasources
    PUBLIC "-//JBoss//DTD JBOSS JCA Config 1.5//EN"
    "http://www.jboss.org/j2ee/dtd/jboss-ds_1_5.dtd">
<datasources>
   <local-tx-datasource>
      <jndi-name>AuthDS</jndi-name>
      <use-java-context>true</use-java-context>
      <connection-url>jdbc:mysql://localhost:3306/AUTHIC2K</connection-url>
      <driver-class>com.mysql.jdbc.Driver</driver-class>
      <user-name>cdsjboss</user-name>
      <password>iConsult2000</password>
       <security-domain>domainIC2K</security-domain>
      <transaction-isolation>TRANSACTION_SERIALIZABLE</transaction-isolation>
      <application-managed-security></application-managed-security>
      <metadata>
          <type-mapping>mySQL</type-mapping>
      </metadata>
   </local-tx-datasource>
</datasources>

********************prodic2k-ds.xml to IngesupEJB project**********************
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE datasources
    PUBLIC "-//JBoss//DTD JBOSS JCA Config 1.5//EN"
    "http://www.jboss.org/j2ee/dtd/jboss-ds_1_5.dtd">
<datasources>
   <local-tx-datasource>
      <jndi-name>ProdDS</jndi-name>
      <use-java-context>true</use-java-context>
      <connection-url>jdbc:mysql://localhost:3306/PRODIC2K</connection-url>
      <driver-class>com.mysql.jdbc.Driver</driver-class>
      <user-name>cdsappl</user-name>
      <password>iConsult2000</password>
       <security-domain>domainIC2K</security-domain>
      <transaction-isolation>TRANSACTION_SERIALIZABLE</transaction-isolation>
      <application-managed-security></application-managed-security>
      <metadata>
          <type-mapping>mySQL</type-mapping>
      </metadata>
   </local-tx-datasource>
</datasources>

*********************************************login-config to be added JBOSS login-config.xml **********************
<application-policy name="domainIC2K">
    <authentication>
      <login-module code="org.jboss.resource.security.ConfiguredIdentityLoginModule"
        flag="sufficient">
        <module-option name="principal">guest</module-option>
        <module-option name="userName">cdsjboss</module-option>
        <module-option name="password">iConsult2000</module-option>
        <module-option name="managedConnectionFactoryName">jboss.jca:service=LocalTxCM,name=AuthDS</module-option>
      </login-module>
    <login-module code="org.jboss.security.auth.spi.DatabaseServerLoginModule" flag="required">
         <module-option name="dsJndiName">java:/AuthDS</module-option>
         <module-option name="unauthenticatedIdentity">guest</module-option>
        <module-option name="principalsQuery">select Password from Principals where PrincipalID=?</module-option>
        <module-option name="rolesQuery"> select Role, RoleGroup from Roles where PrincipalID=?</module-option>
       </login-module>
    </authentication>
</application-policy>
*****************************************************
Mot de passe des utilisateurs
steeve 09m*!
manuel 10n*!
yohann 11p*!
julien 12q*!
lori \<13r*
svepde Ingesup2012*

Methode unix pour encrypter avant de stocker en BDD
>echo -n [PASSWORD] | openssl dgst -md5 -binary | openssl base64

methode java
// Reads user password from given input stream.
static private String readPassword() throws IOException {
// insert code to read a user password from the input stream
System.out.println("Enter a valid password: ");
String password = (new BufferedReader(new InputStreamReader(System.in)))
.readLine();
String hashedPassword =Util.createPasswordHash("MD5", Util.BASE64_ENCODING, null, null, password);
return hashedPassword;

}
********************************************************************************************************
